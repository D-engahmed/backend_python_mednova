"""Add gender column to users

Revision ID: ead9d59e30f4
Revises: 
Create Date: 2025-08-05 10:42:30.024823

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ead9d59e30f4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audio_transcriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=225), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('transcription', sa.Text(), nullable=True),
    sa.Column('language_detected', sa.String(length=10), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audio_transcriptions_file_hash'), 'audio_transcriptions', ['file_hash'], unique=True)
    op.create_index(op.f('ix_audio_transcriptions_id'), 'audio_transcriptions', ['id'], unique=False)
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('gender', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.Column('license_number', sa.String(length=100), nullable=False),
    sa.Column('specialty', sa.String(length=100), nullable=False),
    sa.Column('hospital_affiliation', sa.String(length=200), nullable=False),
    sa.Column('lng', sa.Float(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('whatsapp', sa.String(length=20), nullable=True),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('certifications', sa.String(length=300), nullable=False),
    sa.Column('education', sa.String(length=200), nullable=False),
    sa.Column('languages_spoken', sa.String(length=100), nullable=False),
    sa.Column('consultation_fee', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_doctors_id'), 'doctors', ['id'], unique=False)
    op.create_table('image_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('embedding', sa.Text(), nullable=True),
    sa.Column('prediction', sa.String(length=255), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_image_analyses_file_hash'), 'image_analyses', ['file_hash'], unique=True)
    op.create_index(op.f('ix_image_analyses_id'), 'image_analyses', ['id'], unique=False)
    op.create_table('medicines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('dosage', sa.String(length=50), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('prescription_required', sa.Boolean(), nullable=True),
    sa.Column('is_sponsored', sa.Boolean(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('requires_prescription', sa.Boolean(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=False),
    sa.Column('side_effects', sa.String(length=100), nullable=True),
    sa.Column('contraindications', sa.Text(), nullable=True),
    sa.Column('interactions', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medicines_id'), 'medicines', ['id'], unique=False)
    op.create_index(op.f('ix_medicines_name'), 'medicines', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('gender', sa.String(length=7), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('medical_history', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('medical_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('diagnosis', sa.Text(), nullable=True),
    sa.Column('treatment', sa.Text(), nullable=True),
    sa.Column('symptoms', sa.Text(), nullable=True),
    sa.Column('prescription', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medical_records_id'), 'medical_records', ['id'], unique=False)
    op.create_table('user_doctor',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'doctor_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_doctor')
    op.drop_index(op.f('ix_medical_records_id'), table_name='medical_records')
    op.drop_table('medical_records')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_medicines_name'), table_name='medicines')
    op.drop_index(op.f('ix_medicines_id'), table_name='medicines')
    op.drop_table('medicines')
    op.drop_index(op.f('ix_image_analyses_id'), table_name='image_analyses')
    op.drop_index(op.f('ix_image_analyses_file_hash'), table_name='image_analyses')
    op.drop_table('image_analyses')
    op.drop_index(op.f('ix_doctors_id'), table_name='doctors')
    op.drop_table('doctors')
    op.drop_index(op.f('ix_audio_transcriptions_id'), table_name='audio_transcriptions')
    op.drop_index(op.f('ix_audio_transcriptions_file_hash'), table_name='audio_transcriptions')
    op.drop_table('audio_transcriptions')
    # ### end Alembic commands ###
